
@inproceedings{mcbride_how_2014,
  location = {{New York, NY, USA}},
  title = {How to {{Keep Your Neighbours}} in {{Order}}},
  isbn = {978-1-4503-2873-9},
  url = {https://personal.cis.strath.ac.uk/conor.mcbride/pub/Pivotal.pdf},
  doi = {10.1145/2628136.2628163},
  abstract = {I present a datatype-generic treatment of recursive container types whose elements are guaranteed to be stored in increasing order, with the ordering invariant rolled out systematically. Intervals, lists and binary search trees are instances of the generic treatment. On the journey to this treatment, I report a variety of failed experiments and the transferable learning experiences they triggered. I demonstrate that a total element ordering is enough to deliver insertion and flattening algorithms, and show that (with care about the formulation of the types) the implementations remain as usual. Agda's instance arguments and pattern synonyms maximize the proof search done by the typechecker and minimize the appearance of proofs in program text, often eradicating them entirely. Generalizing to indexed recursive container types, invariants such as size and balance can be expressed in addition to ordering. By way of example, I implement insertion and deletion for 2-3 trees, ensuring both order and balance by the discipline of type checking.},
  booktitle = {Proceedings of the 19th {{ACM SIGPLAN International Conference}} on {{Functional Programming}}},
  series = {ICFP '14},
  publisher = {{ACM}},
  urldate = {2018-06-21},
  date = {2014},
  pages = {297--309},
  keywords = {agda,balancing,dependent types,ordering,sorting},
  author = {McBride, Conor Thomas},
  file = {/Users/doisinkidney/Zotero/storage/T8BXF2WX/McBride - How to Keep Your Neighbours in Order.pdf}
}

@software{danielsson_agda_2018,
  title = {The {{Agda}} Standard Library},
  url = {https://agda.github.io/agda-stdlib/README.html},
  version = {0.16},
  urldate = {2018-07-28},
  date = {2018-06-08},
  author = {Danielsson, Nils Anders},
  editora = {Abel, Andreas and Andjelkovic, Stevan and Bernardy, Jean-Philippe and Berry, Peter and Hardy, Bradley and Breitner, Joachim and Bronson, Samuel and Brown, Daniel and Chapman, James and Chen, Liang-Ting and Daggitt, Matthew and Devriese, Dominique and Doel, Dan and Gergő, Érdi and Grohne, Helmut and Foster, Simon and Hu, Liyang and Hu, Jason and Jansson, Patrik and Jeffrey, Alan and Kokke, Wen and Kotelnikov, Evgeny and Meshveliani, Sergei and Mertens, Eric and Morrison, Darin and Moulin, Guilhem and Mu, Shin-Cheng and Norell, Ulf and Ohkawa, Noriyuki and Pouillard, Nicolas and Sicard-Ramírez, Andrés and Zeilberger, Noam},
  editoratype = {collaborator}
}


